from typing import Literal, final

import pyarrow as pa

@final
class DType:
    def maybe_columns(self) -> list[str] | None: ...
    @classmethod
    def from_arrow(cls, arrow_dtype: pa.DataType, *, non_nullable: bool = False) -> DType: ...

def null() -> DType: ...
def bool_(*, nullable: bool = False) -> DType: ...
def int_(width: Literal[8, 16, 32, 64] = 64, *, nullable: bool = False) -> DType: ...
def uint(width: Literal[8, 16, 32, 64] = 64, *, nullable: bool = False) -> DType: ...
def float_(width: Literal[16, 32, 64] = 64, *, nullable: bool = False) -> DType: ...
def utf8(*, nullable: bool = False) -> DType: ...
def binary(*, nullable: bool = False) -> DType: ...
def struct(fields: dict[str, DType] | None = None, *, nullable: bool = False) -> DType: ...
