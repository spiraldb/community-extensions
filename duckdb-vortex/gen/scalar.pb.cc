// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: scalar.proto
// Protobuf C++ Version: 5.27.1

#include "scalar.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace vortex {
namespace scalar {

inline constexpr ListValue::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : values_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ListValue::ListValue(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ListValueDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListValueDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListValueDefaultTypeInternal() {}
  union {
    ListValue _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListValueDefaultTypeInternal _ListValue_default_instance_;

inline constexpr ScalarValue::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : kind_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR ScalarValue::ScalarValue(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ScalarValueDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ScalarValueDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ScalarValueDefaultTypeInternal() {}
  union {
    ScalarValue _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ScalarValueDefaultTypeInternal _ScalarValue_default_instance_;

inline constexpr Scalar::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        dtype_{nullptr},
        value_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Scalar::Scalar(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ScalarDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ScalarDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ScalarDefaultTypeInternal() {}
  union {
    Scalar _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ScalarDefaultTypeInternal _Scalar_default_instance_;
}  // namespace scalar
}  // namespace vortex
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_scalar_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_scalar_2eproto = nullptr;
const ::uint32_t
    TableStruct_scalar_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::vortex::scalar::Scalar, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::vortex::scalar::Scalar, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::vortex::scalar::Scalar, _impl_.dtype_),
        PROTOBUF_FIELD_OFFSET(::vortex::scalar::Scalar, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::vortex::scalar::ScalarValue, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::vortex::scalar::ScalarValue, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::vortex::scalar::ScalarValue, _impl_.kind_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::vortex::scalar::ListValue, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::vortex::scalar::ListValue, _impl_.values_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::vortex::scalar::Scalar)},
        {12, -1, -1, sizeof(::vortex::scalar::ScalarValue)},
        {37, -1, -1, sizeof(::vortex::scalar::ListValue)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::vortex::scalar::_Scalar_default_instance_._instance,
    &::vortex::scalar::_ScalarValue_default_instance_._instance,
    &::vortex::scalar::_ListValue_default_instance_._instance,
};
const char descriptor_table_protodef_scalar_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\014scalar.proto\022\rvortex.scalar\032\013dtype.pro"
    "to\032\034google/protobuf/struct.proto\"W\n\006Scal"
    "ar\022\"\n\005dtype\030\001 \001(\0132\023.vortex.dtype.DType\022)"
    "\n\005value\030\002 \001(\0132\032.vortex.scalar.ScalarValu"
    "e\"\265\003\n\013ScalarValue\0220\n\nnull_value\030\001 \001(\0162\032."
    "google.protobuf.NullValueH\000\022\024\n\nbool_valu"
    "e\030\002 \001(\010H\000\022\024\n\nint8_value\030\003 \001(\021H\000\022\025\n\013int16"
    "_value\030\004 \001(\021H\000\022\025\n\013int32_value\030\005 \001(\021H\000\022\025\n"
    "\013int64_value\030\006 \001(\022H\000\022\025\n\013uint8_value\030\007 \001("
    "\rH\000\022\026\n\014uint16_value\030\010 \001(\rH\000\022\026\n\014uint32_va"
    "lue\030\t \001(\rH\000\022\026\n\014uint64_value\030\n \001(\004H\000\022\023\n\tf"
    "16_value\030\013 \001(\rH\000\022\023\n\tf32_value\030\014 \001(\002H\000\022\023\n"
    "\tf64_value\030\r \001(\001H\000\022\026\n\014string_value\030\016 \001(\t"
    "H\000\022\025\n\013bytes_value\030\017 \001(\014H\000\022.\n\nlist_value\030"
    "\020 \001(\0132\030.vortex.scalar.ListValueH\000B\006\n\004kin"
    "d\"7\n\tListValue\022*\n\006values\030\001 \003(\0132\032.vortex."
    "scalar.ScalarValueb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_scalar_2eproto_deps[2] =
    {
        &::descriptor_table_dtype_2eproto,
        &::descriptor_table_google_2fprotobuf_2fstruct_2eproto,
};
static ::absl::once_flag descriptor_table_scalar_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_scalar_2eproto = {
    false,
    false,
    666,
    descriptor_table_protodef_scalar_2eproto,
    "scalar.proto",
    &descriptor_table_scalar_2eproto_once,
    descriptor_table_scalar_2eproto_deps,
    2,
    3,
    schemas,
    file_default_instances,
    TableStruct_scalar_2eproto::offsets,
    file_level_enum_descriptors_scalar_2eproto,
    file_level_service_descriptors_scalar_2eproto,
};
namespace vortex {
namespace scalar {
// ===================================================================

class Scalar::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Scalar>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Scalar, _impl_._has_bits_);
};

void Scalar::clear_dtype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.dtype_ != nullptr) _impl_.dtype_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
Scalar::Scalar(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:vortex.scalar.Scalar)
}
inline PROTOBUF_NDEBUG_INLINE Scalar::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::vortex::scalar::Scalar& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Scalar::Scalar(
    ::google::protobuf::Arena* arena,
    const Scalar& from)
    : ::google::protobuf::Message(arena) {
  Scalar* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.dtype_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::vortex::dtype::DType>(
                              arena, *from._impl_.dtype_)
                        : nullptr;
  _impl_.value_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::vortex::scalar::ScalarValue>(
                              arena, *from._impl_.value_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:vortex.scalar.Scalar)
}
inline PROTOBUF_NDEBUG_INLINE Scalar::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Scalar::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, dtype_),
           0,
           offsetof(Impl_, value_) -
               offsetof(Impl_, dtype_) +
               sizeof(Impl_::value_));
}
Scalar::~Scalar() {
  // @@protoc_insertion_point(destructor:vortex.scalar.Scalar)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Scalar::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.dtype_;
  delete _impl_.value_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Scalar::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(Scalar, _impl_._cached_size_),
              false,
          },
          &Scalar::MergeImpl,
          &Scalar::kDescriptorMethods,
          &descriptor_table_scalar_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> Scalar::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Scalar, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Scalar_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::vortex::scalar::Scalar>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .vortex.scalar.ScalarValue value = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(Scalar, _impl_.value_)}},
    // .vortex.dtype.DType dtype = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Scalar, _impl_.dtype_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .vortex.dtype.DType dtype = 1;
    {PROTOBUF_FIELD_OFFSET(Scalar, _impl_.dtype_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .vortex.scalar.ScalarValue value = 2;
    {PROTOBUF_FIELD_OFFSET(Scalar, _impl_.value_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::vortex::dtype::DType>()},
    {::_pbi::TcParser::GetTable<::vortex::scalar::ScalarValue>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Scalar::Clear() {
// @@protoc_insertion_point(message_clear_start:vortex.scalar.Scalar)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.dtype_ != nullptr);
      _impl_.dtype_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.value_ != nullptr);
      _impl_.value_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* Scalar::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:vortex.scalar.Scalar)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .vortex.dtype.DType dtype = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.dtype_, _impl_.dtype_->GetCachedSize(), target, stream);
  }

  // .vortex.scalar.ScalarValue value = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *_impl_.value_, _impl_.value_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vortex.scalar.Scalar)
  return target;
}

::size_t Scalar::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vortex.scalar.Scalar)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .vortex.dtype.DType dtype = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.dtype_);
    }

    // .vortex.scalar.ScalarValue value = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.value_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Scalar::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Scalar*>(&to_msg);
  auto& from = static_cast<const Scalar&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:vortex.scalar.Scalar)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.dtype_ != nullptr);
      if (_this->_impl_.dtype_ == nullptr) {
        _this->_impl_.dtype_ =
            ::google::protobuf::Message::CopyConstruct<::vortex::dtype::DType>(arena, *from._impl_.dtype_);
      } else {
        _this->_impl_.dtype_->MergeFrom(*from._impl_.dtype_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.value_ != nullptr);
      if (_this->_impl_.value_ == nullptr) {
        _this->_impl_.value_ =
            ::google::protobuf::Message::CopyConstruct<::vortex::scalar::ScalarValue>(arena, *from._impl_.value_);
      } else {
        _this->_impl_.value_->MergeFrom(*from._impl_.value_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Scalar::CopyFrom(const Scalar& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vortex.scalar.Scalar)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Scalar::InternalSwap(Scalar* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Scalar, _impl_.value_)
      + sizeof(Scalar::_impl_.value_)
      - PROTOBUF_FIELD_OFFSET(Scalar, _impl_.dtype_)>(
          reinterpret_cast<char*>(&_impl_.dtype_),
          reinterpret_cast<char*>(&other->_impl_.dtype_));
}

::google::protobuf::Metadata Scalar::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ScalarValue::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::vortex::scalar::ScalarValue, _impl_._oneof_case_);
};

void ScalarValue::set_allocated_list_value(::vortex::scalar::ListValue* list_value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_kind();
  if (list_value) {
    ::google::protobuf::Arena* submessage_arena = list_value->GetArena();
    if (message_arena != submessage_arena) {
      list_value = ::google::protobuf::internal::GetOwnedMessage(message_arena, list_value, submessage_arena);
    }
    set_has_list_value();
    _impl_.kind_.list_value_ = list_value;
  }
  // @@protoc_insertion_point(field_set_allocated:vortex.scalar.ScalarValue.list_value)
}
ScalarValue::ScalarValue(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:vortex.scalar.ScalarValue)
}
inline PROTOBUF_NDEBUG_INLINE ScalarValue::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::vortex::scalar::ScalarValue& from_msg)
      : kind_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

ScalarValue::ScalarValue(
    ::google::protobuf::Arena* arena,
    const ScalarValue& from)
    : ::google::protobuf::Message(arena) {
  ScalarValue* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (kind_case()) {
    case KIND_NOT_SET:
      break;
      case kNullValue:
        _impl_.kind_.null_value_ = from._impl_.kind_.null_value_;
        break;
      case kBoolValue:
        _impl_.kind_.bool_value_ = from._impl_.kind_.bool_value_;
        break;
      case kInt8Value:
        _impl_.kind_.int8_value_ = from._impl_.kind_.int8_value_;
        break;
      case kInt16Value:
        _impl_.kind_.int16_value_ = from._impl_.kind_.int16_value_;
        break;
      case kInt32Value:
        _impl_.kind_.int32_value_ = from._impl_.kind_.int32_value_;
        break;
      case kInt64Value:
        _impl_.kind_.int64_value_ = from._impl_.kind_.int64_value_;
        break;
      case kUint8Value:
        _impl_.kind_.uint8_value_ = from._impl_.kind_.uint8_value_;
        break;
      case kUint16Value:
        _impl_.kind_.uint16_value_ = from._impl_.kind_.uint16_value_;
        break;
      case kUint32Value:
        _impl_.kind_.uint32_value_ = from._impl_.kind_.uint32_value_;
        break;
      case kUint64Value:
        _impl_.kind_.uint64_value_ = from._impl_.kind_.uint64_value_;
        break;
      case kF16Value:
        _impl_.kind_.f16_value_ = from._impl_.kind_.f16_value_;
        break;
      case kF32Value:
        _impl_.kind_.f32_value_ = from._impl_.kind_.f32_value_;
        break;
      case kF64Value:
        _impl_.kind_.f64_value_ = from._impl_.kind_.f64_value_;
        break;
      case kStringValue:
        new (&_impl_.kind_.string_value_) decltype(_impl_.kind_.string_value_){arena, from._impl_.kind_.string_value_};
        break;
      case kBytesValue:
        new (&_impl_.kind_.bytes_value_) decltype(_impl_.kind_.bytes_value_){arena, from._impl_.kind_.bytes_value_};
        break;
      case kListValue:
        _impl_.kind_.list_value_ = ::google::protobuf::Message::CopyConstruct<::vortex::scalar::ListValue>(arena, *from._impl_.kind_.list_value_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:vortex.scalar.ScalarValue)
}
inline PROTOBUF_NDEBUG_INLINE ScalarValue::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : kind_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void ScalarValue::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ScalarValue::~ScalarValue() {
  // @@protoc_insertion_point(destructor:vortex.scalar.ScalarValue)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ScalarValue::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_kind()) {
    clear_kind();
  }
  _impl_.~Impl_();
}

void ScalarValue::clear_kind() {
// @@protoc_insertion_point(one_of_clear_start:vortex.scalar.ScalarValue)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (kind_case()) {
    case kNullValue: {
      // No need to clear
      break;
    }
    case kBoolValue: {
      // No need to clear
      break;
    }
    case kInt8Value: {
      // No need to clear
      break;
    }
    case kInt16Value: {
      // No need to clear
      break;
    }
    case kInt32Value: {
      // No need to clear
      break;
    }
    case kInt64Value: {
      // No need to clear
      break;
    }
    case kUint8Value: {
      // No need to clear
      break;
    }
    case kUint16Value: {
      // No need to clear
      break;
    }
    case kUint32Value: {
      // No need to clear
      break;
    }
    case kUint64Value: {
      // No need to clear
      break;
    }
    case kF16Value: {
      // No need to clear
      break;
    }
    case kF32Value: {
      // No need to clear
      break;
    }
    case kF64Value: {
      // No need to clear
      break;
    }
    case kStringValue: {
      _impl_.kind_.string_value_.Destroy();
      break;
    }
    case kBytesValue: {
      _impl_.kind_.bytes_value_.Destroy();
      break;
    }
    case kListValue: {
      if (GetArena() == nullptr) {
        delete _impl_.kind_.list_value_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.kind_.list_value_);
      }
      break;
    }
    case KIND_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = KIND_NOT_SET;
}


const ::google::protobuf::MessageLite::ClassData*
ScalarValue::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(ScalarValue, _impl_._cached_size_),
              false,
          },
          &ScalarValue::MergeImpl,
          &ScalarValue::kDescriptorMethods,
          &descriptor_table_scalar_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 16, 1, 62, 2> ScalarValue::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    16, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294901760,  // skipmap
    offsetof(decltype(_table_), field_entries),
    16,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ScalarValue_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::vortex::scalar::ScalarValue>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .google.protobuf.NullValue null_value = 1;
    {PROTOBUF_FIELD_OFFSET(ScalarValue, _impl_.kind_.null_value_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kOpenEnum)},
    // bool bool_value = 2;
    {PROTOBUF_FIELD_OFFSET(ScalarValue, _impl_.kind_.bool_value_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kBool)},
    // sint32 int8_value = 3;
    {PROTOBUF_FIELD_OFFSET(ScalarValue, _impl_.kind_.int8_value_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kSInt32)},
    // sint32 int16_value = 4;
    {PROTOBUF_FIELD_OFFSET(ScalarValue, _impl_.kind_.int16_value_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kSInt32)},
    // sint32 int32_value = 5;
    {PROTOBUF_FIELD_OFFSET(ScalarValue, _impl_.kind_.int32_value_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kSInt32)},
    // sint64 int64_value = 6;
    {PROTOBUF_FIELD_OFFSET(ScalarValue, _impl_.kind_.int64_value_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kSInt64)},
    // uint32 uint8_value = 7;
    {PROTOBUF_FIELD_OFFSET(ScalarValue, _impl_.kind_.uint8_value_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUInt32)},
    // uint32 uint16_value = 8;
    {PROTOBUF_FIELD_OFFSET(ScalarValue, _impl_.kind_.uint16_value_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUInt32)},
    // uint32 uint32_value = 9;
    {PROTOBUF_FIELD_OFFSET(ScalarValue, _impl_.kind_.uint32_value_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUInt32)},
    // uint64 uint64_value = 10;
    {PROTOBUF_FIELD_OFFSET(ScalarValue, _impl_.kind_.uint64_value_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUInt64)},
    // uint32 f16_value = 11;
    {PROTOBUF_FIELD_OFFSET(ScalarValue, _impl_.kind_.f16_value_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUInt32)},
    // float f32_value = 12;
    {PROTOBUF_FIELD_OFFSET(ScalarValue, _impl_.kind_.f32_value_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kFloat)},
    // double f64_value = 13;
    {PROTOBUF_FIELD_OFFSET(ScalarValue, _impl_.kind_.f64_value_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kDouble)},
    // string string_value = 14;
    {PROTOBUF_FIELD_OFFSET(ScalarValue, _impl_.kind_.string_value_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bytes bytes_value = 15;
    {PROTOBUF_FIELD_OFFSET(ScalarValue, _impl_.kind_.bytes_value_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kBytes | ::_fl::kRepAString)},
    // .vortex.scalar.ListValue list_value = 16;
    {PROTOBUF_FIELD_OFFSET(ScalarValue, _impl_.kind_.list_value_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::vortex::scalar::ListValue>()},
  }}, {{
    "\31\0\0\0\0\0\0\0\0\0\0\0\0\0\14\0\0\0\0\0\0\0\0\0"
    "vortex.scalar.ScalarValue"
    "string_value"
  }},
};

PROTOBUF_NOINLINE void ScalarValue::Clear() {
// @@protoc_insertion_point(message_clear_start:vortex.scalar.ScalarValue)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_kind();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* ScalarValue::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:vortex.scalar.ScalarValue)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (kind_case()) {
    case kNullValue: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          1, this->_internal_null_value(), target);
      break;
    }
    case kBoolValue: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          2, this->_internal_bool_value(), target);
      break;
    }
    case kInt8Value: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteSInt32ToArray(
          3, this->_internal_int8_value(), target);
      break;
    }
    case kInt16Value: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteSInt32ToArray(
          4, this->_internal_int16_value(), target);
      break;
    }
    case kInt32Value: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteSInt32ToArray(
          5, this->_internal_int32_value(), target);
      break;
    }
    case kInt64Value: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteSInt64ToArray(
          6, this->_internal_int64_value(), target);
      break;
    }
    case kUint8Value: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          7, this->_internal_uint8_value(), target);
      break;
    }
    case kUint16Value: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          8, this->_internal_uint16_value(), target);
      break;
    }
    case kUint32Value: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          9, this->_internal_uint32_value(), target);
      break;
    }
    case kUint64Value: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          10, this->_internal_uint64_value(), target);
      break;
    }
    case kF16Value: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          11, this->_internal_f16_value(), target);
      break;
    }
    case kF32Value: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteFloatToArray(
          12, this->_internal_f32_value(), target);
      break;
    }
    case kF64Value: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          13, this->_internal_f64_value(), target);
      break;
    }
    case kStringValue: {
      const std::string& _s = this->_internal_string_value();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "vortex.scalar.ScalarValue.string_value");
      target = stream->WriteStringMaybeAliased(14, _s, target);
      break;
    }
    case kBytesValue: {
      const std::string& _s = this->_internal_bytes_value();
      target = stream->WriteBytesMaybeAliased(15, _s, target);
      break;
    }
    case kListValue: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          16, *_impl_.kind_.list_value_, _impl_.kind_.list_value_->GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vortex.scalar.ScalarValue)
  return target;
}

::size_t ScalarValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vortex.scalar.ScalarValue)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (kind_case()) {
    // .google.protobuf.NullValue null_value = 1;
    case kNullValue: {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_null_value());
      break;
    }
    // bool bool_value = 2;
    case kBoolValue: {
      total_size += 2;
      break;
    }
    // sint32 int8_value = 3;
    case kInt8Value: {
      total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(
          this->_internal_int8_value());
      break;
    }
    // sint32 int16_value = 4;
    case kInt16Value: {
      total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(
          this->_internal_int16_value());
      break;
    }
    // sint32 int32_value = 5;
    case kInt32Value: {
      total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(
          this->_internal_int32_value());
      break;
    }
    // sint64 int64_value = 6;
    case kInt64Value: {
      total_size += ::_pbi::WireFormatLite::SInt64SizePlusOne(
          this->_internal_int64_value());
      break;
    }
    // uint32 uint8_value = 7;
    case kUint8Value: {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_uint8_value());
      break;
    }
    // uint32 uint16_value = 8;
    case kUint16Value: {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_uint16_value());
      break;
    }
    // uint32 uint32_value = 9;
    case kUint32Value: {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_uint32_value());
      break;
    }
    // uint64 uint64_value = 10;
    case kUint64Value: {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_uint64_value());
      break;
    }
    // uint32 f16_value = 11;
    case kF16Value: {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_f16_value());
      break;
    }
    // float f32_value = 12;
    case kF32Value: {
      total_size += 5;
      break;
    }
    // double f64_value = 13;
    case kF64Value: {
      total_size += 9;
      break;
    }
    // string string_value = 14;
    case kStringValue: {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_string_value());
      break;
    }
    // bytes bytes_value = 15;
    case kBytesValue: {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_bytes_value());
      break;
    }
    // .vortex.scalar.ListValue list_value = 16;
    case kListValue: {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.kind_.list_value_);
      break;
    }
    case KIND_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void ScalarValue::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ScalarValue*>(&to_msg);
  auto& from = static_cast<const ScalarValue&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:vortex.scalar.ScalarValue)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_kind();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kNullValue: {
        _this->_impl_.kind_.null_value_ = from._impl_.kind_.null_value_;
        break;
      }
      case kBoolValue: {
        _this->_impl_.kind_.bool_value_ = from._impl_.kind_.bool_value_;
        break;
      }
      case kInt8Value: {
        _this->_impl_.kind_.int8_value_ = from._impl_.kind_.int8_value_;
        break;
      }
      case kInt16Value: {
        _this->_impl_.kind_.int16_value_ = from._impl_.kind_.int16_value_;
        break;
      }
      case kInt32Value: {
        _this->_impl_.kind_.int32_value_ = from._impl_.kind_.int32_value_;
        break;
      }
      case kInt64Value: {
        _this->_impl_.kind_.int64_value_ = from._impl_.kind_.int64_value_;
        break;
      }
      case kUint8Value: {
        _this->_impl_.kind_.uint8_value_ = from._impl_.kind_.uint8_value_;
        break;
      }
      case kUint16Value: {
        _this->_impl_.kind_.uint16_value_ = from._impl_.kind_.uint16_value_;
        break;
      }
      case kUint32Value: {
        _this->_impl_.kind_.uint32_value_ = from._impl_.kind_.uint32_value_;
        break;
      }
      case kUint64Value: {
        _this->_impl_.kind_.uint64_value_ = from._impl_.kind_.uint64_value_;
        break;
      }
      case kF16Value: {
        _this->_impl_.kind_.f16_value_ = from._impl_.kind_.f16_value_;
        break;
      }
      case kF32Value: {
        _this->_impl_.kind_.f32_value_ = from._impl_.kind_.f32_value_;
        break;
      }
      case kF64Value: {
        _this->_impl_.kind_.f64_value_ = from._impl_.kind_.f64_value_;
        break;
      }
      case kStringValue: {
        if (oneof_needs_init) {
          _this->_impl_.kind_.string_value_.InitDefault();
        }
        _this->_impl_.kind_.string_value_.Set(from._internal_string_value(), arena);
        break;
      }
      case kBytesValue: {
        if (oneof_needs_init) {
          _this->_impl_.kind_.bytes_value_.InitDefault();
        }
        _this->_impl_.kind_.bytes_value_.Set(from._internal_bytes_value(), arena);
        break;
      }
      case kListValue: {
        if (oneof_needs_init) {
          _this->_impl_.kind_.list_value_ =
              ::google::protobuf::Message::CopyConstruct<::vortex::scalar::ListValue>(arena, *from._impl_.kind_.list_value_);
        } else {
          _this->_impl_.kind_.list_value_->MergeFrom(from._internal_list_value());
        }
        break;
      }
      case KIND_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ScalarValue::CopyFrom(const ScalarValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vortex.scalar.ScalarValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ScalarValue::InternalSwap(ScalarValue* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.kind_, other->_impl_.kind_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata ScalarValue::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ListValue::_Internal {
 public:
};

ListValue::ListValue(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:vortex.scalar.ListValue)
}
inline PROTOBUF_NDEBUG_INLINE ListValue::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::vortex::scalar::ListValue& from_msg)
      : values_{visibility, arena, from.values_},
        _cached_size_{0} {}

ListValue::ListValue(
    ::google::protobuf::Arena* arena,
    const ListValue& from)
    : ::google::protobuf::Message(arena) {
  ListValue* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:vortex.scalar.ListValue)
}
inline PROTOBUF_NDEBUG_INLINE ListValue::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : values_{visibility, arena},
        _cached_size_{0} {}

inline void ListValue::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ListValue::~ListValue() {
  // @@protoc_insertion_point(destructor:vortex.scalar.ListValue)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ListValue::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
ListValue::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(ListValue, _impl_._cached_size_),
              false,
          },
          &ListValue::MergeImpl,
          &ListValue::kDescriptorMethods,
          &descriptor_table_scalar_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> ListValue::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ListValue_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::vortex::scalar::ListValue>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .vortex.scalar.ScalarValue values = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ListValue, _impl_.values_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .vortex.scalar.ScalarValue values = 1;
    {PROTOBUF_FIELD_OFFSET(ListValue, _impl_.values_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::vortex::scalar::ScalarValue>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void ListValue::Clear() {
// @@protoc_insertion_point(message_clear_start:vortex.scalar.ListValue)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.values_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* ListValue::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:vortex.scalar.ListValue)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .vortex.scalar.ScalarValue values = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_values_size());
       i < n; i++) {
    const auto& repfield = this->_internal_values().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vortex.scalar.ListValue)
  return target;
}

::size_t ListValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vortex.scalar.ListValue)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .vortex.scalar.ScalarValue values = 1;
  total_size += 1UL * this->_internal_values_size();
  for (const auto& msg : this->_internal_values()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void ListValue::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ListValue*>(&to_msg);
  auto& from = static_cast<const ListValue&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:vortex.scalar.ListValue)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_values()->MergeFrom(
      from._internal_values());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ListValue::CopyFrom(const ListValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vortex.scalar.ListValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ListValue::InternalSwap(ListValue* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.values_.InternalSwap(&other->_impl_.values_);
}

::google::protobuf::Metadata ListValue::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace scalar
}  // namespace vortex
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_scalar_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
