from collections.abc import Iterator
from typing import final

import pyarrow as pa

import vortex as vx

@final
class ArrayIterator:
    @property
    def dtype(self) -> vx.DType: ...
    def read_all(self) -> vx.Array: ...
    def __iter__(self) -> ArrayIterator: ...
    def __next__(self) -> vx.Array: ...
    def to_arrow(self) -> pa.RecordBatchReader: ...
    @staticmethod
    def from_iter(dtype: vx.DType, iter: Iterator[vx.Array]) -> ArrayIterator: ...
