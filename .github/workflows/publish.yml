name: Publish
concurrency:
  group: publish
  cancel-in-progress: true

on:
  release:
    types: [ published ]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release'
        required: true

jobs:
  publish-rust:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          # Needed to pull full commit history for release version number inference
          fetch-depth: 0
          submodules: "recursive"

      - uses: ./.github/actions/cleanup
      - uses: ./.github/actions/setup-rust

      - name: Cargo Set Version
        shell: bash
        # TODO(marko): Remove version after move to rust 2024 edition.
        run: |
          cargo install cargo-edit --version 0.13.0 && \
          cargo set-version --workspace ${{ github.event.release.tag_name || github.event.inputs.version }}

      - name: Run release-plz
        id: run-release-plz
        if: "false"
        uses: release-plz/action@v0.5.106
        with:
          command: release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

  prepare-python:
    runs-on: ${{ matrix.target.runs-on }}
    strategy:
      fail-fast: false
      matrix:
        target:
          - { os: macos, runs-on: "macos-latest", target: aarch64-apple-darwin }
          - { os: macos, runs-on: "macos-13", target: x86_64-apple-darwin }
          - { os: ubuntu, runs-on: "ubuntu-latest", target: aarch64-unknown-linux-gnu }
          - { os: ubuntu, runs-on: "ubuntu-latest", target: x86_64-unknown-linux-gnu }
    environment:
      name: pypi
      url: https://pypi.org/p/vortex-data
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: "recursive"

      - uses: ./.github/actions/cleanup
      - uses: ./.github/actions/setup-rust
        with:
          targets: ${{ matrix.target.target }}

      - name: Cargo Set Version
        shell: bash
        # TODO(marko): Remove version after move to rust 2024 edition.
        run: |
          cargo install cargo-edit --version 0.13.0 && \
          cargo set-version --workspace ${{ github.event.release.tag_name || github.event.inputs.version }}

      - name: Set up Python
        uses: actions/setup-python@v5
        # Latest macOS doesn't allow maturin to install stuff into the global Python interpreter
        if: "${{ matrix.target.runs-on == 'macos-latest' }}"
        with:
          python-version: '3.10'

      - name: Build wheel
        uses: PyO3/maturin-action@v1
        with:
          command: build
          target: ${{ matrix.target.target }}
          args: >
            ${{ (matrix.target.os == 'ubuntu' && '--zig') || '' }}
            --compatibility manylinux2014
            --release
            --manifest-path pyvortex/Cargo.toml
            --out dist
            --interpreter python3.10
        env:
          MATURIN_PEP517_USE_BASE_PYTHON: "true"
          # Keep this constant to avoid pyo3 invalidating itself
          PYO3_ENVIRONMENT_SIGNATURE: "cpython3"

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: "${{ matrix.target.target }}-wheels"
          path: dist/

  publish-python:
    name: "Release to PyPi"
    needs: [ prepare-python, publish-rust ]
    runs-on: ubuntu-latest
    if: "false"
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing
    environment:
      name: push-to-pypi
      url: https://pypi.org/p/vortex-data
    steps:
      - uses: actions/download-artifact@v4
        with:
          # https://github.com/actions/download-artifact?tab=readme-ov-file#download-all-artifacts
          # "To download them to the same directory:"
          path: dist/
          merge-multiple: true
      - name: Display structure of downloaded files
        run: ls -R dist/
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          attestations: true
          verbose: true
